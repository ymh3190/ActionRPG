#1. 게임플레이 어빌리티 시스템의 정의
1. 게임 플레이 어빌리티 시스템은 RPG 또는 MOBA 타이틀에서 찾을 수 있는 유형의 어빌리티와 어트리뷰트를 구축하기 위한 매우 유연한 프레임워크다.

2. 게임 캐릭터가 사용할 액션 또는 패시브 능력, 이러한 액션의 결과로 다양한 프로퍼티를 더하거나, 뺄 수 있는 상태 효과, "쿨 다운"타이머 또는 리소스 비용을 구현하여 이러한 액션의 사용을 조절할 수 있습니다.

3. 각 레벨에서 능력 레벨과 효과를 변경하고 파티클이나 사운드 효과 등을 활성화합니다.

4. 현대 RPG 또는 MOBA 장르에 설정 한 캐릭터의 능력만큼 간단하거나 점프하는 것처럼 게임 내 기능을 간단하게 설계, 구현 및 네트워크화 할 수 있습니다.

#2. 게임플레이 어빌리티 시스템의 클래스 구조
1. 게임플레이 어빌리티 시스템은 C++ 또는 Blueprint기반 UGameplayAbility클래스입니다. C++ 또는 블루프린트 스크립팅에서
Ability가 실제로 수행하는 작업을 정의하고 복제 및 인스턴스화 동작과 같은 Ability 처리 방법 요소를 설정합니다.

2. 게임플레이 어빌리티의 로직은 일반적으로 어빌리트를 정의하는 논리 과정에서 어빌리티태스크라고 하는 일련의 비동기 빌딩 블록을 호출합니다.
UAbilityTaskAbility 추상 클래스에서 파생된 어빌리티 태스크는 최종 결과가 무엇인지에 따라 작업을 완료할 때 C+ 또는 블루프린트 실행 핀 중 하나를 자주 호출합니다.

3. 게임플레이 어빌리티 시스템은 게임플레이 어트리뷰트 및 게임플레이 이펙트를 지원합니다.
1. 게임플레이 어트리뷰트는 어떤식으로든 게임이나 액터에 영향을 미치는 구조내에 저장된 float 값입니다. 예를들면 체력, 점프 높이, 공격 속도 등과 같은 값입니다.

2. 게임플레이 이펙트는 게임플레이 어트리뷰트가 즉각적인지(포션) 일정 시간동안(버프,디버프) 변하는지를 나타낼 수 있습니다.

3. 게임 플레이 능력 시스템과 상호 작용하는 모든 액터에는 능력 시스템 컴포넌트 가 있어야합니다. 이 컴포넌트는 능력을 활성화하고, 속성을 저장하고, 효과를 업데이트하고, 액터 간의 상호 작용을 처리합니다.
게임플레이 어빌리티 시스템을 사용할 수 있고, 어빌리티 시스템 컴포넌트를 포함한 액터를 만들면, 어빌리티를 생성할 수 있고, 액터가 어빌리티에 반응할 방법을 결정할 수 있습니다.

#3. 시스템 설정
1. 프로젝트 - 플러그인 - 게임플레이 - 게임플레이 어빌리티 - 활성화 체크

2. 어빌리티 시스템 컴포넌트는 캐릭터가 게임플레이 어빌리티 시스템에 접근할 메인 인터페이스입니다.
이 컴포넌트는 어트리뷰트를 관리하고, 이펙트를 실행하고, 어빌리티를 저장하고, 게임 플레이 능력 활성화, 확인 및 취소 명령에 대한 플레이어 입력 바인딩을 처리합니다.
게임 플레이 어빌리티 시스템과 상호 작용하기위한 액터에는 어빌리티 시스템 컴포넌트가 있어야합니다.