#1. GamePlay Ability 클래스
1. 클래스 Gameplay Ability (게임플레이 어빌리티)는 UGameplayAbility 클래스에서 파생된 것으로,
게임 내 어빌리티가 하는 일, (있다면) 시전하는 데 드는 비용, 언제 어떤 상황에서 사용할 수 있는지 등을 정의합니다.

2. 게임플레이 어빌리티는 비동기 실행되는 오브젝트 인스턴스로 존재할 수 있기에
캐릭터 애니메이션, 파티클과 사운드 이펙트, 플레이어 입력이나 실행 도중 벌어지는 캐릭터 상호작용에 따른 분기처럼 전문화된 다단계 작업을 실행할 수 있습니다.

3. 네트워크를 통한 자체 리플리케이트나, (클라이언트 측 예측 지원을 포함해서) 클라이언트 또는 서버 머신에서의 실행이나,
심지어 변수 동기화 및 원격 프로시저 콜(RPC) 호출도 가능합니다. 또한 게임 세션 도중 엔진에서 게임플레이 어빌리티를 구현하는 방식도 유연합니다.
예로 쿨다운(재사용 대기시간) 및 시전 비용, 플레이어 입력, 애님 몽타주가 있는 애니메이션, 어빌리티 자체를 액터에 부여할 때의 반응도 구현할 수 있습니다.

#2. 어빌리티 부여 및 회수
1. 액터가 어빌리티를 사용하려면, 그 어빌리티 시스템 컴포넌트에 그 어빌리티를 부여(grant)해야 합니다. 다음 Ability System Component 함수는 어빌리티에 액세스를 부여합니다.
■ GiveAbility : 어빌리티를 부여합니다.
■ GiveAbilityAndActivateOnce : 어빌리티를 부여하고, 한 번 활성화합니다.

2. 다음은 어빌리티 시스템 컴포넌트에서 어빌리티에 대한 액세스를 회수(revoke)하는 함수로, 어빌리티를 부여받았을 때 반환된 FGameplayAbilitySpecHandle 을 사용합니다.
■ ClearAbility : 지정한 어빌리티를 제거합니다.
■ SetRemoveAbilityOnEnd : 지정한 어빌리티 실행이 완료되면 제거, 어빌리티가 실행 중이면, 그 입력을 즉시 지워 플레이어가 더 이상
사용할 수 없도록 합니다.
■ ClearAllAbilities : 모든 어빌리티를 제거합니다.

#3. 기본 사용법(너무 방대함)
어빌리티 시스템의 기능이 너무 방대하기에, ActionRPG에서 사용한 기능은 다른 메모장에서 설명합니다.